
from typing import Optional

class ListNode:
    def __init__(self, x):
        self.val = x
        self.next = None
class Solution:
    def hasCycle(self, head: Optional[ListNode]) -> bool:
        # if not head:
        #     return False
        # if head.next == head:
        #     return True
        # visited = []
        # while head.next:
        #     if head.next not in visited:
        #         head = head.next
        #         visited.append(head.next)
        #     else:
        #         return True
        # return False
        fast = head
        slow = head

        while fast and fast.next:
            fast = fast.next.next
            slow = slow.next

            if fast == slow:
                return True
        return False